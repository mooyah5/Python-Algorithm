# 1

# 수열 A, B가 있는데 서로 anagram
# A에서 특정 문자를 다른 위치로 옮긴다.
# 1,2,3,4,5 에서 5를 3 위치로 바꾸면

# 1 2 3 4 5 6
# 3 2 1 3 1 3
# 6번의 3을 3번으로 옮기면 3만큼 에너지를 소모
# A=>B로 숫자를 옮기는데 필요한 최소한의 에너지

# 수열길이 범위는 10만, 숫자의 범위ㅣ도 10만

# 문제가 복잡한 이유
# 1이 여러군데 있을 수 있는데,
# 어디로 가야할지..

# anagram에서 같은 숫자/문자는 동일한 수만큼 등장한다.
# 순서에 맞게 가야 함!!!
# 각 숫자의 등장 순서에 맞게 이동해야 한다.
# 이걸 알아야 문제를 풀 수 있음

# A     5  5
# B  5        5

# 순서대로 옮기면 교차점이 안생기고
# 순서대로 옮기지 않으면 무조건 교차점이 생김
# 교차점이 생긴 두 위치에 대해서 서로 바꾸는 게 무조건 같거나 이득이다.

# 결론, 숫자를 하나씩 정해. 1이면 A, B에서의 위치를 찾아서 배치를 한다.
# A-B 둘 사이의 거리를 다 더한다.
# 모든 수에 대해서 이짓을 하면 된다.

n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

# ca[num] := 수열 A에 num이라는 수가 등장하는 모든 인덱스를 오름차순으로 들고 있다.
ca = [[] for _ in range(100001)]
cb = [[] for _ in range(100001)]

for i in range(n):
    ca[a[i]].append(i)  # a[i]라는 수가 i번째에 등장함을 ca에 갱신
    cb[b[i]].append(i)  # a[i]라는 수가 i번째에 등장함을 ca에 갱신

ans = 0
for num in range(1, 100001):
    for x, y in zip(ca[num], cb[num]):
        ans += abs(x - y)

print(ans)

"""
5
3 1 2 2 1
1 1 2 3 2
답 8
"""
